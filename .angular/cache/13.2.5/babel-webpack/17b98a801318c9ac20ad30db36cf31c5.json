{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet LoginPage = class LoginPage {\n  constructor(servicio, router, loading, toast, userService, storageService) {\n    this.servicio = servicio;\n    this.router = router;\n    this.loading = loading;\n    this.toast = toast;\n    this.userService = userService;\n    this.storageService = storageService;\n    this.userData = {\n      email_address: '',\n      password: ''\n    };\n    this.id = \"\";\n    this.first_name = \"\";\n    this.last_name = \"\";\n    this.department_id = 0;\n    this.email_address = \"\";\n    this.password = \"\";\n    this.rol = \"\";\n  }\n\n  ngOnInit() {//this.load_User();\n  }\n\n  validateInputs() {\n    let email_address = this.userData.email_address.trim();\n    let password = this.userData.password.trim();\n    return this.userData.email_address && this.userData.password && email_address.length > 0 && password.length > 0;\n  }\n  /*\n  loginAction(){\n    if(this.validateInputs()){\n      this.userService.login(this.userData).subscribe((res: any) => {\n        if(res.info.item){\n          this.storageService.store('email', res.info.item.email_address);\n          this.storage.set('user_id', res.info.item.email_address);\n          this.router.navigate(['communications']);\n          console.log(this.storage);\n          console.log(this.storageService);\n          this.storage.set('name', 'Max');\n             // Or to get a key/value pair\n          this.storage.get('name').then((val) => {\n            console.log(val);\n          });\n          \n        }else{\n          console.log('Email o contraseña incorrecto');\n        }\n      }, (error: any) => {\n        console.log(\"Error de conexión\");\n      })\n    }else{\n      console.log('Introduzca todos los campos');\n    }\n  }\n  */\n\n\n  login() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (this.email_address == \"\") {\n        this.presentToast('Introduzca tu email');\n      } else if (this.password == \"\") {\n        this.presentToast('Introduzca tu contraseña');\n      } else {\n        let l = yield this.loading.create();\n        l.present();\n        this.servicio.getUser(this.email_address, this.password).subscribe(data => {\n          l.dismiss(); //console.log(data.info.item.communication_id);\n\n          if (data.info.item.user_id > 0) {\n            this.id = data.info.item.user_id;\n            console.log(this.id); //this.storageService.storeCurrentUser(this.id);\n            //this.id = this.storageService.getCurrentUser();\n\n            this.first_name = data.info.item.first_name;\n            this.last_name = data.info.item.last_name;\n            this.department_id = data.info.item.department_id; //this.password = data.info.item.type_communication;\n\n            this.rol = data.info.item.rol; //console.log(this.type_communication);\n\n            this.servicio.goTo('/communications/' + this.id);\n            console.log(this.first_name);\n            console.log(this.last_name);\n            console.log(this.rol);\n          } else {\n            l.dismiss();\n            this.servicio.message('Email o contraseña incorrecto', 'danger');\n            this.servicio.goTo('/login');\n          }\n        }, error => {\n          l.dismiss();\n          this.servicio.message('No se pudo realizar la petición', 'danger');\n          this.servicio.goTo('/login');\n        });\n      }\n    });\n  } // login(){\n  //   const user = {email_address: this.email_address, password: this.password};\n  //   this.userService.login(user).subscribe( data => {\n  //     console.log(data);\n  //   })\n  // }\n\n\n  getUserId() {\n    return this.id;\n  }\n\n  logout() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.id = \"\";\n      this.first_name = \"\";\n      this.last_name = \"\";\n      this.department_id = 0;\n      this.rol = \"\";\n      this.email_address = \"\";\n      this.password = \"\";\n      this.servicio.message('La sesión se finalizo de forma exitosa', 'success');\n      this.servicio.goTo('/login');\n    });\n  }\n\n  presentToast(a) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const toast = yield this.toast.create({\n        message: a,\n        duration: 1500,\n        position: 'top'\n      });\n      toast.present();\n    });\n  }\n\n};\nLoginPage = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss']\n})], LoginPage);\nexport { LoginPage };","map":null,"metadata":{},"sourceType":"module"}