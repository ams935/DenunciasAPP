{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common/http\";\nimport * as i3 from \"@ionic/angular\";\nexport let ServicesService = /*#__PURE__*/(() => {\n  class ServicesService {\n    constructor(router, http, toast) {\n      this.router = router;\n      this.http = http;\n      this.toast = toast;\n      this.URL_API = 'http://localhost:8080/API/'; //puerto 8080\n    }\n\n    goTo(url) {\n      this.router.navigateByUrl(url);\n    }\n\n    communications_list(_text = '') {\n      return this.http.post(this.URL_API + 'list-communication', this.objectToFormData({\n        text: _text\n      }));\n    }\n\n    communication_list(_id) {\n      return this.http.get(this.URL_API + 'consult-communication/' + _id);\n    }\n\n    communications_list_user(_id, _text = '') {\n      return this.http.post(this.URL_API + 'list-communication/' + _id, this.objectToFormData({\n        text: _text\n      }));\n    }\n\n    communications_type_list(_text = '') {\n      return this.http.post(this.URL_API + 'list-typeOfCommunication', this.objectToFormData({\n        text: _text\n      }));\n    }\n\n    users_list(_text = '') {\n      return this.http.post(this.URL_API + 'list-user', this.objectToFormData({\n        text: _text\n      }));\n    }\n\n    departments_list(_text = '') {\n      return this.http.post(this.URL_API + 'list-department', this.objectToFormData({\n        text: _text\n      }));\n    }\n\n    communication_save(data) {\n      console.log(data.department_id);\n      return this.http.post(this.URL_API + (data.communication_id == 0 ? 'create-communication' : 'update-communication' + data.communication_id), this.objectToFormData({\n        communication_id: data.communication_id,\n        communication_type_id: data.communication_type_id,\n        communication_sender_id: data.communication_sender_id,\n        communication_recipient_id: data.communication_recipient_id,\n        communication_department_id: data.communication_department_id,\n        anonymous: data.anonymous,\n        message: data.message,\n        status: data.status\n      }));\n    } //Login and logout\n\n\n    getUser(_email_address, _password) {\n      return this.http.get(this.URL_API + 'consult-user/' + _email_address + ',' + _password);\n    }\n\n    logout() {}\n\n    message(texto, tipo = 'success') {\n      return __awaiter(this, void 0, void 0, function* () {\n        let t = yield this.toast.create({\n          message: texto,\n          color: tipo,\n          duration: 3000\n        });\n        t.present();\n      });\n    }\n\n    objectToFormData(obj, form, namespace) {\n      let fd = form || new FormData();\n      let formKey;\n\n      for (let property in obj) {\n        if (obj.hasOwnProperty(property) && obj[property]) {\n          if (namespace) {\n            formKey = namespace + '[' + property + ']';\n          } else {\n            formKey = property;\n          }\n\n          if (obj[property] instanceof Date) {\n            fd.append(formKey, obj[property].toISOString());\n          }\n\n          if (typeof obj[property] === 'object' && !(obj[property] instanceof File)) {\n            this.objectToFormData(obj[property], fd, formKey);\n          } else {\n            fd.append(formKey, obj[property]);\n          }\n        }\n      }\n\n      return fd;\n    }\n\n  }\n\n  ServicesService.ɵfac = function ServicesService_Factory(t) {\n    return new (t || ServicesService)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.HttpClient), i0.ɵɵinject(i3.ToastController));\n  };\n\n  ServicesService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ServicesService,\n    factory: ServicesService.ɵfac,\n    providedIn: 'root'\n  });\n  return ServicesService;\n})();","map":null,"metadata":{},"sourceType":"module"}