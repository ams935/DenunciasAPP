{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/services.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"../services/user.service\";\nimport * as i5 from \"../services/storage.service\";\nimport * as i6 from \"@angular/forms\";\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(servicio, router, loading, toast, userService, storageService) {\n      this.servicio = servicio;\n      this.router = router;\n      this.loading = loading;\n      this.toast = toast;\n      this.userService = userService;\n      this.storageService = storageService;\n      this.userData = {\n        email_address: '',\n        password: ''\n      };\n      this.id = \"\";\n      this.first_name = \"\";\n      this.last_name = \"\";\n      this.department_id = 0;\n      this.email_address = \"\";\n      this.password = \"\";\n      this.rol = \"\";\n    }\n\n    ngOnInit() {//this.load_User();\n    }\n\n    validateInputs() {\n      let email_address = this.userData.email_address.trim();\n      let password = this.userData.password.trim();\n      return this.userData.email_address && this.userData.password && email_address.length > 0 && password.length > 0;\n    }\n    /*\n    loginAction(){\n      if(this.validateInputs()){\n        this.userService.login(this.userData).subscribe((res: any) => {\n          if(res.info.item){\n            this.storageService.store('email', res.info.item.email_address);\n            this.storage.set('user_id', res.info.item.email_address);\n            this.router.navigate(['communications']);\n            console.log(this.storage);\n            console.log(this.storageService);\n            this.storage.set('name', 'Max');\n               // Or to get a key/value pair\n            this.storage.get('name').then((val) => {\n              console.log(val);\n            });\n            \n          }else{\n            console.log('Email o contraseña incorrecto');\n          }\n        }, (error: any) => {\n          console.log(\"Error de conexión\");\n        })\n      }else{\n        console.log('Introduzca todos los campos');\n      }\n    }\n    */\n\n\n    login() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.email_address == \"\") {\n          this.presentToast('Introduzca tu email');\n        } else if (this.password == \"\") {\n          this.presentToast('Introduzca tu contraseña');\n        } else {\n          let l = yield this.loading.create();\n          l.present();\n          this.servicio.getUser(this.email_address, this.password).subscribe(data => {\n            l.dismiss(); //console.log(data.info.item.communication_id);\n\n            if (data.info.item.user_id > 0) {\n              this.id = data.info.item.user_id;\n              console.log(this.id); //this.storageService.storeCurrentUser(this.id);\n              //this.id = this.storageService.getCurrentUser();\n\n              this.first_name = data.info.item.first_name;\n              this.last_name = data.info.item.last_name;\n              this.department_id = data.info.item.department_id; //this.password = data.info.item.type_communication;\n\n              this.rol = data.info.item.rol; //console.log(this.type_communication);\n\n              this.servicio.goTo('/communications/' + this.id);\n              console.log(this.first_name);\n              console.log(this.last_name);\n              console.log(this.rol);\n            } else {\n              l.dismiss();\n              this.servicio.message('Email o contraseña incorrecto', 'danger');\n              this.servicio.goTo('/login');\n            }\n          }, error => {\n            l.dismiss();\n            this.servicio.message('No se pudo realizar la petición', 'danger');\n            this.servicio.goTo('/login');\n          });\n        }\n      });\n    } // login(){\n    //   const user = {email_address: this.email_address, password: this.password};\n    //   this.userService.login(user).subscribe( data => {\n    //     console.log(data);\n    //   })\n    // }\n\n\n    getUserId() {\n      return this.id;\n    }\n\n    logout() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.id = \"\";\n        this.first_name = \"\";\n        this.last_name = \"\";\n        this.department_id = 0;\n        this.rol = \"\";\n        this.email_address = \"\";\n        this.password = \"\";\n        this.servicio.message('La sesión se finalizo de forma exitosa', 'success');\n        this.servicio.goTo('/login');\n      });\n    }\n\n    presentToast(a) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toast.create({\n          message: a,\n          duration: 1500,\n          position: 'top'\n        });\n        toast.present();\n      });\n    }\n\n  }\n\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.ServicesService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.LoadingController), i0.ɵɵdirectiveInject(i3.ToastController), i0.ɵɵdirectiveInject(i4.UserService), i0.ɵɵdirectiveInject(i5.StorageService));\n  };\n\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 17,\n    vars: 4,\n    consts: [[3, \"fullscreen\"], [\"id\", \"container\"], [1, \"container2\"], [\"position\", \"floating\", 1, \"center\"], [\"src\", \"../../assets/icon/denuncias.png\", 2, \"width\", \"230px\", \"height\", \"230px\"], [\"lines\", \"full\"], [\"position\", \"floating\"], [\"type\", \"text\", \"name\", \"email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [1, \"boton\"], [\"color\", \"dark\", \"expand\", \"block\", 1, \"center-button\", 3, \"disabled\", \"click\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"ion-thumbnail\", 3);\n        i0.ɵɵelement(4, \"ion-img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-item\", 5)(6, \"ion-label\", 6);\n        i0.ɵɵtext(7, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ion-input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_8_listener($event) {\n          return ctx.email_address = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"ion-item\", 5)(10, \"ion-label\", 6);\n        i0.ɵɵtext(11, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"ion-input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_12_listener($event) {\n          return ctx.password = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"ion-row\", 9)(14, \"ion-col\")(15, \"ion-button\", 10);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_15_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵtext(16, \"Iniciar Sesi\\u00F3n\");\n        i0.ɵɵelementEnd()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"fullscreen\", true);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.email_address);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.password);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", true);\n      }\n    },\n    directives: [i3.IonContent, i6.ɵNgNoValidate, i6.NgControlStatusGroup, i6.NgForm, i3.IonThumbnail, i3.IonImg, i3.IonItem, i3.IonLabel, i3.IonInput, i3.TextValueAccessor, i6.RequiredValidator, i6.NgControlStatus, i6.NgModel, i3.IonRow, i3.IonCol, i3.IonButton],\n    styles: [\"#container[_ngcontent-%COMP%]{text-align:center;position:absolute;left:0;right:0;top:50%;transform:translateY(-50%);width:100%}.container2[_ngcontent-%COMP%]{width:85%;margin:0 auto}#container[_ngcontent-%COMP%]   strong[_ngcontent-%COMP%]{font-size:20px;line-height:26px}#container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{font-size:16px;line-height:22px;color:#8c8c8c;margin:0}#container[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none}.boton[_ngcontent-%COMP%]{margin-top:60px;width:100%}.center-button[_ngcontent-%COMP%]{width:50%;height:50px;margin:0 auto;--border-radius: 7px 7px}.center[_ngcontent-%COMP%]{width:100%;height:100%;place-items:center;display:grid;margin-top:-50px}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module"}